# Generated by Django 4.2.2 on 2023-06-27 11:40

import core.custom_moduls.models_func
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=70, verbose_name='Имя')),
                ('secondname', models.CharField(max_length=70, verbose_name='Фамилия')),
                ('surname', models.CharField(blank=True, max_length=70, null=True, verbose_name='Отчество')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('photo', models.ImageField(blank=True, max_length=128, null=True, upload_to=core.custom_moduls.models_func.get_img_path, verbose_name='Фото')),
                ('photo_thumbnail', django_resized.forms.ResizedImageField(blank=True, crop=['middle', 'center'], force_format='WEBP', keep_meta=True, max_length=128, null=True, quality=90, scale=None, size=[320, 500], upload_to=core.custom_moduls.models_func.get_img_thumb_path, verbose_name='Фото')),
                ('info', models.TextField(blank=True, null=True, verbose_name='Информация')),
            ],
            options={
                'verbose_name': 'Актер',
                'verbose_name_plural': 'Актеры',
                'ordering': ('secondname', 'firstname', 'surname'),
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('description', models.TextField(verbose_name='Описание')),
                ('photo', models.ImageField(max_length=128, upload_to=core.custom_moduls.models_func.get_img_path, verbose_name='Логотип')),
                ('photo_thumbnail', django_resized.forms.ResizedImageField(crop=['middle', 'center'], force_format='WEBP', keep_meta=True, max_length=128, quality=90, scale=None, size=[480, 150], upload_to=core.custom_moduls.models_func.get_img_thumb_path, verbose_name='Логотип мини')),
            ],
            options={
                'verbose_name': 'Студия',
                'verbose_name_plural': 'Студии',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Название')),
                ('original_title', models.CharField(blank=True, default=None, max_length=120, null=True, verbose_name='Оригинальное название')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('description', models.TextField(verbose_name='Описание')),
                ('poster', models.ImageField(max_length=128, upload_to=core.custom_moduls.models_func.get_img_path, verbose_name='Постер')),
                ('poster_thumbnail', django_resized.forms.ResizedImageField(blank=True, crop=['middle', 'center'], force_format='WEBP', keep_meta=True, max_length=128, quality=100, scale=None, size=[378, 540], upload_to=core.custom_moduls.models_func.get_img_thumb_path, verbose_name='Постер мини')),
                ('episodes', models.PositiveSmallIntegerField(verbose_name='Всего эпизодов')),
                ('episodes_aired', models.PositiveSmallIntegerField(verbose_name='Эпизодов вышло')),
                ('aired_on', models.DateField(verbose_name='Дата выхода аниме')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('actors', models.ManyToManyField(blank=True, related_name='titles', to='core.actor', verbose_name='Актеры озвучивания')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='titles', to=settings.AUTH_USER_MODEL, verbose_name='Автор поста')),
                ('favourites', models.ManyToManyField(blank=True, related_name='favourite_titles', to=settings.AUTH_USER_MODEL, verbose_name='В избранном')),
                ('genres', models.ManyToManyField(related_name='titles', to='core.genre', verbose_name='Жанр')),
                ('related_lists', models.ManyToManyField(blank=True, to='core.title', verbose_name='Связанные тайтлы')),
                ('studios', models.ManyToManyField(related_name='titles', to='core.studio', verbose_name='Студия')),
            ],
            options={
                'verbose_name': 'Тайтл',
                'verbose_name_plural': 'Тайтлы',
                'ordering': ('-create_time',),
            },
        ),
        migrations.CreateModel(
            name='AverageTitleRating',
            fields=[
                ('title', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='average_rating', serialize=False, to='core.title')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Средняя оценка')),
                ('voters', models.PositiveIntegerField(verbose_name='Количество проголосовавших')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.PositiveSmallIntegerField(choices=[(1, 'Понедельник'), (2, 'Вторник'), (3, 'Среда'), (4, 'Четверг'), (5, 'Пятница'), (6, 'Суббота'), (7, 'Воскресенье')], verbose_name='День выхода')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Время выхода')),
                ('delay', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата при задержке')),
                ('title', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='core.title', verbose_name='Тайтл')),
            ],
            options={
                'verbose_name': 'Расписание',
                'verbose_name_plural': 'Расписание',
                'ordering': ('day', 'time', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(max_length=128, upload_to=core.custom_moduls.models_func.get_img_path, verbose_name='Изображение')),
                ('image_thumbnail', django_resized.forms.ResizedImageField(blank=True, crop=['middle', 'center'], force_format='WEBP', keep_meta=True, max_length=128, quality=85, scale=None, size=[480, 270], upload_to=core.custom_moduls.models_func.get_img_thumb_path, verbose_name='Изображение мини')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frames', to='core.title', verbose_name='Тайтл')),
            ],
            options={
                'verbose_name': 'Кадр',
                'verbose_name_plural': 'Кадры',
                'ordering': ('-create_time',),
            },
        ),
        migrations.CreateModel(
            name='AlternativeTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alternative_title', to='core.title')),
            ],
        ),
        migrations.CreateModel(
            name='TitleViews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(default='45.243.82.169', null=True)),
                ('object_id', models.PositiveBigIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='contenttypes.contenttype')),
            ],
            options={
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='core_titlev_content_e48fec_idx')],
            },
        ),
        migrations.CreateModel(
            name='TitleRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Оценка')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='title_rating', to='core.title', verbose_name='Тайтл')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rating', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Рейтинг',
                'verbose_name_plural': 'Рейтинг',
                'ordering': ('title', '-rating'),
                'unique_together': {('title', 'user')},
            },
        ),
    ]
